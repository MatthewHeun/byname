% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Binary.R
\name{elementproduct_byname}
\alias{elementproduct_byname}
\title{Name-wise matrix element multiplication}
\usage{
elementproduct_byname(...)
}
\arguments{
\item{multiplicand}{Multiplicand matrix or constant}

\item{multiplier}{Multiplier matrix or constant

Performs a union and sorting of names of rows and columns for both \code{multiplicand} and \code{multiplier}
prior to element multiplication.
Zeroes are inserted for missing matrix elements.
Doing so ensures that
the dimensions of the \code{multiplicand} and \code{multiplier} will be conformable.}
}
\value{
A matrix representing the name-wise element product of \code{multiplicand} and \code{multiplier}
}
\description{
Name-wise matrix element multiplication
}
\examples{
library(magrittr)
library(dplyr)
elementproduct_byname(2, 2)
commoditynames <- c("c1", "c2")
industrynames <- c("i1", "i2")
U <- matrix(1:4, ncol = 2, dimnames = list(commoditynames, industrynames)) \%>\%
  setrowtype("Commodities") \%>\% setcoltype("Industries")
G <- matrix(1:4, ncol = 2, dimnames = list(rev(commoditynames), rev(industrynames))) \%>\%
  setrowtype("Commodities") \%>\% setcoltype("Industries")
U * G # Not what is desired, because names aren't aligned
elementproduct_byname(U, G)
elementproduct_byname(U, 0)
elementproduct_byname(0, G)
# This also works with lists
elementproduct_byname(list(U, U), list(G, G))
DF <- data.frame(U = I(list()), G = I(list()))
DF[[1,"U"]] <- U
DF[[2,"U"]] <- U
DF[[1,"G"]] <- G
DF[[2,"G"]] <- G
elementproduct_byname(DF$U, DF$G)
DF \%>\% mutate(elementprods = elementproduct_byname(U, G))
}
