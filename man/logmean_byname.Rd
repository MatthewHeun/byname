% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Byname.R
\name{logmean_byname}
\alias{logmean_byname}
\title{Name- and element-wise logarithmic mean of matrices.}
\usage{
logmean_byname(X1, X2, base = exp(1))
}
\arguments{
\item{X1}{first operand (a matrix or constant value or lists of same).}

\item{X2}{second operand (a matrix or constant value or lists of same).}

\item{base}{the base of the logarithm used when computing the logarithmic mean.
(Default is \code{base = exp(1)}.)}
}
\value{
A matrix representing the name-wise logarithmic mean 
        of \strong{\code{X1}} and \strong{\code{X2}}.
}
\description{
The logarithmic mean of corresponding entries of \strong{\code{X1}} and \strong{\code{X2}} is 
\code{0} if \code{x1 = 0} or \code{x2 = 0}, 
\code{x1} if \code{x1 = x2}, or
\code{(x2 - x1) / (log(x2) - log(x1))} otherwise.
}
\details{
This function performs a union and sorting of row and column names 
prior to performing logarithmic mean.
Zeroes are inserted for missing matrix elements.

Internally, the third condition is implemented as 
\code{(y - x) / log(y/x)}.

Note that \code{(x2 - x1) / log(x2/x1) = (x1 - x2) / log(x1/x2)},
so logarithmic mean is commutative;
the order of arguments \strong{\code{X1}} and \strong{\code{X2}}
does not change the result.
}
\examples{
library(magrittr)
library(dplyr)
difference_byname(100, 50)
commoditynames <- c("c1", "c2")
industrynames <- c("i1", "i2")
U <- matrix(1:4, ncol = 2, dimnames = list(commoditynames, industrynames)) \%>\%
  setrowtype("Commodities") \%>\% setcoltype("Industries")
G <- matrix(rev(1:4), ncol = 2, dimnames = list(rev(commoditynames), rev(industrynames))) \%>\%
  setrowtype("Commodities") \%>\% setcoltype("Industries")
U - G # Non-sensical. Row and column names not respected.
difference_byname(U, G) # Row and column names respected! Should be all zeroes.
difference_byname(100, U)
difference_byname(10, G)
difference_byname(G) # When subtrahend is missing, return minuend (in this case, G).
difference_byname(subtrahend = G) # When minuend is missing, return - subtrahend (in this case, -G)
# This also works with lists
difference_byname(list(100, 100), list(50, 50))
difference_byname(list(U,U), list(G,G))
DF <- data.frame(U = I(list()), G = I(list()))
DF[[1,"U"]] <- U
DF[[2,"U"]] <- U
DF[[1,"G"]] <- G
DF[[2,"G"]] <- G
difference_byname(DF$U, DF$G)
DF \%>\% mutate(diffs = difference_byname(U, G))
}
