% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Binary.R
\name{matrixproduct_byname}
\alias{matrixproduct_byname}
\title{Name-wise matrix multiplication}
\usage{
matrixproduct_byname(...)
}
\arguments{
\item{multiplicand}{Multiplicand matrix}

\item{multiplier}{Multiplier matrix

Performs a union and sorting of multiplicand rows and multiplier columns by name 
prior to multiplication.
Zeroes are inserted for missing matrix elements.
Doing so ensures that
the dimensions of the \code{multiplicand} and \code{multiplier} will be conformable.
I.e., the number of columns in \code{multiplicand}
will equal the number of rows in \code{multiplier},
so long as the column names of multiplicand are unique and
the row names of multiplier are unique.
If column type of \code{multiplicand} is not same as
row type of \code{multiplier},
the function will fail.
The result is matrix product
with row names from \code{multiplicand} and column names from \code{multiplier}.}
}
\value{
A matrix representing the name-wise product of \code{multiplicand} and \code{multiplier}
}
\description{
Name-wise matrix multiplication
}
\examples{
library(magrittr)
library(dplyr)
V <- matrix(1:6, ncol = 3, dimnames = list(c("i1", "i2"), c("c1", "c2", "c3"))) \%>\%
  setrowtype("Industries") \%>\% setcoltype("Commodities")
G <- matrix(1:4, ncol = 2, dimnames = list(c("c2", "c1"), c("g2", "g1"))) \%>\%
  setrowtype("Commodities") \%>\% setcoltype("Industries")
# Succeeds because G is completed to include a row named c3 (that contains zeroes).
matrixproduct_byname(V, G) 
\dontrun{V \%*\% G} # Fails because E lacks a row named c3.
# This also works with lists
matrixproduct_byname(list(V,V), list(G,G))
DF <- data.frame(V = I(list()), G = I(list()))
DF[[1,"V"]] <- V
DF[[2,"V"]] <- V
DF[[1,"G"]] <- G
DF[[2,"G"]] <- G
matrixproduct_byname(DF$V, DF$G)
DF \%>\% mutate(matprods = matrixproduct_byname(V, G))
}
