% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Utilities.R
\name{create_colvec_byname}
\alias{create_colvec_byname}
\title{Create column vectors from data}
\usage{
create_colvec_byname(.dat, dimnames = NA, colname = NA)
}
\arguments{
\item{.dat}{Data to be converted to column vectors.}

\item{dimnames}{The dimension names to be used for creating the column vector, in a list format, or as a data frame column
containing a list of the dimension names to be used for each observation.}

\item{colname}{The name of the column of the colvector.}
}
\value{
A column vector, a list of column vectors, or a data frame column of column vectors, depending on the
value of \code{.dat}.
}
\description{
This function takes data in the \code{.dat} and creates column vectors.
}
\details{
The row and column names in the resulting column vector are taken from
the names of \code{.dat} and \code{colname}.
If set, \code{dimnames} overrides the names of \code{.dat} and \code{colname}.

This function is a "byname" function that can accept a single number,
a vector, a list, or a data frame in \code{.dat}.

Row types and column types are taken from the row type and column type attributes of \code{.dat}.
}
\examples{
# Works with single numbers
create_colvec_byname(c(r1 = 1) \%>\% setrowtype("rt") \%>\% setcoltype("ct"), 
                     colname = "r1")
# Works with vectors
create_colvec_byname(c(c1 = 1, c2 = 2), rowname = "r1")
# Works with a list
create_colvec_byname(list(c(c1 = 1, c2 = 2), c(C1 = 3, C2 = 4, C3 = 5)), 
                     rowname = list("r1", "R1"))
# Works in a tibble, too.
# (Must be a tibble, not a data frame, so that names are preserved.)
dat <- list(c(c1 = 1),
            c(C1 = 2, C2 = 3), 
            c(c1 = 1, c2 = 2, c3 = 3, c4 = 4, c5 = 5, c6 = 6))
rnms <- list("r1", "R1", "r1")
df1 <- tibble::tibble(dat, rnms)
df1
df1 <- df1 \%>\%
  dplyr::mutate(
    rowvec_col = create_colvec_byname(dat, rowname = rnms)
  )
df1$rowvec_col[[1]]
df1$rowvec_col[[2]]
df1$rowvec_col[[3]]
}
