% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Unary.R
\name{prodall_byname}
\alias{prodall_byname}
\title{Product of all elements in a matrix}
\usage{
prodall_byname(a, mc.cores = get_mc_cores())
}
\arguments{
\item{a}{the matrix whose elements are to be multiplied}

\item{mc.cores}{an integer specifying the number of cores to be used.
Default is \code{get_mc_cores()} or \code{1}. 
Try \code{mc.cores = parallel::detectCores()}.}
}
\value{
the product of all elements in \code{a} as a numeric.
}
\description{
This function is equivalent to \code{a \%>\% rowprods_byname() \%>\% colprods_byname()},
but returns a single numeric value instead of a 1x1 matrix.
}
\examples{
library(magrittr)
library(dplyr)
M <- matrix(2, nrow=2, ncol=2, dimnames = list(paste0("i", 1:2), paste0("c", 1:2))) \%>\%
  setrowtype("Industry") \%>\% setcoltype("Product")
prodall_byname(M)
rowprods_byname(M) \%>\% colprods_byname
# Also works for lists
prodall_byname(list(M,M))
DF <- data.frame(M = I(list()))
DF[[1,"M"]] <- M
DF[[2,"M"]] <- M
prodall_byname(DF$M[[1]])
prodall_byname(DF$M)
res <- DF \%>\% mutate(
  prods = prodall_byname(M)
)
res$prods
}
