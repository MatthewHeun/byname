% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Byname.R
\name{sum_byname}
\alias{sum_byname}
\title{Name-wise addition of matrices.}
\usage{
sum_byname(augend, addend)
}
\arguments{
\item{augend}{Addend matrix or constant}

\item{addend}{Augend matrix or constant

Performs a union and sorting of row and column names prior to summation.
Zeroes are inserted for missing matrix elements.}
}
\value{
A matrix representing the name-wise sum of \code{addend} and \code{augend}
}
\description{
Name-wise addition of matrices.
}
\examples{
sum_byname(2, 2)
commoditynames <- c("c1", "c2")
industrynames <- c("i1", "i2")
U <- matrix(1:4, ncol = 2, dimnames = list(commoditynames, industrynames)) \%>\%
  setrowtype("Commodities") \%>\% setcoltype("Industries")
G <- matrix(1:4, ncol = 2, dimnames = list(rev(commoditynames), rev(industrynames))) \%>\%
  setrowtype("Commodities") \%>\% setcoltype("Industries")
U + G # Non-sensical.  Row and column names not respected.
sum_byname(U, G)
sum_byname(U, 100)
sum_byname(200, G)
V <- matrix(1:4, ncol = 2, dimnames = list(industrynames, commoditynames)) \%>\%
  setrowtype("Industries") \%>\% setcoltype("Commodities")
U + V # row and column names are non-sensical and blindly taken from first argument (U)
\dontrun{sum_byname(U, V)} # Fails, because row and column types are different
# This also works with lists
sum_byname(list(U,U), list(G,G))
sum_byname(list(U,U), list(100,100))
sum_byname(list(U,U), as.list(rep_len(100, 2)))
DF <- data.frame(U = I(list()), G = I(list()))
DF[[1,"U"]] <- U
DF[[2,"U"]] <- U
DF[[1,"G"]] <- G
DF[[2,"G"]] <- G
sum_byname(DF$U, DF$G)
DF \%>\% mutate(sums = sum_byname(U, G))
sum_byname(U) # If only one argument, return it.
sum_byname(2, NULL) # Gives 2
sum_byname(2, NA)   # Gives NA
sum_byname(NULL, 1) # Gives 1
sum_byname(list(NULL, 1), list(1, 1))
DF2 <- data.frame(U = I(list()), G = I(list()))
DF2[[1,"U"]] <- NULL
DF2[[2,"U"]] <- U
DF2[[1,"G"]] <- G
DF2[[2,"G"]] <- G
sum_byname(DF2$U, DF2$G)
DF3 <- DF2 \%>\% mutate(sums = sum_byname(U, G))
DF3
DF3$sums[[1]]
DF3$sums[[2]]
}
