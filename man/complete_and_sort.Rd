% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CompletingMatrices.R
\name{complete_and_sort}
\alias{complete_and_sort}
\title{Complete matrices relative to one another and sort into same row, column order}
\usage{
complete_and_sort(m1, m2, margin = c(1, 2), roworder = NA, colorder = NA)
}
\arguments{
\item{m1}{The first matrix}

\item{m2}{The second matrix}

\item{margin}{Specifies the subscript(s) in \code{x} over which cmpleting and sorting will occur}

\item{roworder}{Specifies a custom ordering for rows of returned matrices. 
Unspecified rows are dropped.}

\item{colorder}{Specifies a custom ordering for columns of returned matrices.
Unspecified columns are dropped.}
}
\value{
A named list containing completed and sorted versions of \code{m1} and \code{m2}.
}
\description{
Completes each matrix relative to each other, thereby assuring that 
both matrices have same row and column names. 
Missing rows and columns (relative to the other matrix)
are filled with zeroes.
Thereafter, sorts the rows and columns of the matrices
such that they are in the same order (by name).
}
\details{
\code{margin} has nearly the same semantic meaning as in \code{\link[base]{apply}}.
For rows only, give \code{1}; 
for columns only, give \code{2};
for both rows and columns, give \code{c(1,2)}, the default value.
If \code{transpose = TRUE}, margin applies to \code{m1} directly
and is transposed for \code{m2}.
So, for example, if \code{margin = 1} and \code{transpose = TRUE},
the rows of \code{m1} and columns of \code{m2} will be completed and sorted relative to each other.
If \code{margin = 2} and \code{transpose = TRUE}, 
the columns of \code{m1} and rows of \code{m2} will be completed and sorted relative to each other.
}
\examples{
m1 <- matrix(c(1:6), nrow=3, dimnames = list(c("r1", "r2", "r3"), c("c2", "c1")))
m2 <- matrix(c(7:12), ncol=3, dimnames = list(c("r3", "r4"), c("c2", "c3", "c4")))
complete_and_sort(m1)
complete_and_sort(m1, m2)
complete_and_sort(m1, m2, roworder = c("r3", "r2", "r1"))
complete_and_sort(m1, m2, colorder = c("c4", "c3")) # Drops un-specified columns
complete_and_sort(m1, m2, margin = 1)
complete_and_sort(m1, m2, margin = 2)
complete_and_sort(m1, t(m2))
complete_and_sort(m1, t(m2), margin = 1)
complete_and_sort(m1, t(m2), margin = 2)
v <- matrix(1:6, ncol=2, dimnames=list(c("r3", "r1", "r2"), c("c2", "c1")))
complete_and_sort(v, v)
# Also works with lists
complete_and_sort(list(m1,m1), list(m2,m2))
}
