% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Byname.R
\name{select_rows_byname}
\alias{select_rows_byname}
\title{Select rows of a matrix (or list of matrices) by name}
\usage{
select_rows_byname(m, retain_pattern = "$^", remove_pattern = "$^")
}
\arguments{
\item{m}{a matrix or a list of matrices}

\item{retain_pattern}{an extended regex or list of extended regexes that specifies which rows of \code{m} to retain}

\item{remove_pattern}{an extended regex or list of extended regexes that specifies which rows of \code{m} to remove
Patterns are compared against row names using extended regex.
Retaining rows takes precedence over removing rows.
If \code{m} contains none of the rows requested to be retained, \code{NULL} is returned.
If \code{m} contains none of the rows requested to be removed, \code{m} is returned.

Some typical patterns are:
* "^Electricity$|^Oil$": row names that are EXACTLY "Electricity" or "Oil"
* "^Electricity|^Oil": row names that START WITH "Electricity" or "Oil"
* "Electricity|Oil": row names that CONTAIN "Electricity" or "Oil" anywhere within them.

Given a list of row names, a pattern can be constructed easily using the \code{make_pattern} function.}
}
\value{
a matrix that is a subset of \code{m} with rows selected by \code{row_names}.
}
\description{
Select rows of a matrix (or list of matrices) by name
}
\examples{
m <- matrix(1:16, ncol = 4, dimnames=list(c(paste0("i", 1:4)), paste0("c", 1:4))) \%>\%
  setrowtype("Industries") \%>\% setcoltype("Commodities")
select_rows_byname(m, "i1")
select_rows_byname(m, c("i1"))
select_rows_byname(m, c("i1", "i4"))
select_rows_byname(m, c("-i3"))
select_rows_byname(m, c("-i1", "-i3"))
select_rows_byname(m, c("-i1", "-i3", "i4")) # Keeping has precedence.
select_rows_byname(m, c("x")) # Matches nothing.  NULL is returned.
select_rows_byname(m, c("-x")) # Matches nothing.  All of m is returned.
select_rows_byname(m, "i", exact = FALSE) # Matches all rows, 
                                          # because partial match is OK, and
                                          # all row names start with "i".
# Also works for lists
select_rows_byname(list(m,m), row_names = list(c("i1", "i4"), c("i2", "i3")))
select_rows_byname(list(m,m), row_names = c("i1", "i4"))
# Test inexact matches
n <- setrownames_byname(m, c("a1", "a2", "b1", "b2"))
select_rows_byname(n, "a", exact = FALSE)
select_rows_byname(n, "-a", exact = FALSE)
}
